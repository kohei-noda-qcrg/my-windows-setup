$ErrorActionPreference = "Stop" # Stop to executing program when error is occured
$PSDefaultParameterValues['Out-File:Encoding'] = 'utf8'

##############################
# Install softwares (windows)
##############################

# WindowsTerminal (https://www.microsoft.com/ja-jp/p/windows-terminal/9n0dx20hk701)
# is a powerful terminal software. I recommend you to use this software when you use WSL2 ubuntu.
winget install --silent Microsoft.WindowsTerminal --accept-package-agreements --accept-source-agreements

# Vscode (https://code.visualstudio.com/)
# is a very powerful editor. I strongly suggest you to use this editor when you edit any text files.
# (Install option reference is here : https://proudust.github.io/20200726-winget-install-vscode/)
winget install --silent Microsoft.VisualStudioCode --override "/VERYSILENT /NORESTART /mergetasks=""!runcode,desktopicon,addcontextmenufiles,addcontextmenufolders,associatewithfiles,addtopath"""

# You can extract tar.gz etc. files by using 7zip (https://sevenzip.osdn.jp/).
winget install --silent 7zip.7zip

# Git (https://gitforwindows.org/) supports git command on windows.
winget install --silent Git.Git

# GitHub CLI (https://cli.github.com/)
winget install --silent GitHub.cli

# PowerToys (https://learn.microsoft.com/ja-jp/windows/powertoys/) is a software that provides you to customize windows.
winget install --silent Microsoft.PowerToys

# QuickLook (https://apps.microsoft.com/store/detail/9NV4BS3L1H4S) is a software that provides you to preview files.
winget install --silent QL-Win.QuickLook

# AutoHotkey V2 (https://www.autohotkey.com/) is key remap tool
winget install --silent AutoHotkey.AutoHotkey

##############################
# AutoHotkey setting
##############################
# copy alt-ime.ahk to startup folder
$ahk_file_path = "$PSScriptRoot\alt-ime.ahk"
$startup_path = "$Env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup"
Copy-Item "$ahk_file_path" "$startup_path" -Force

##############################
# Windows Terminal setting
##############################

$new_guid=[Guid]::NewGuid()
$git_bash_terminal_setting="{
    `"commandline`": `"%PROGRAMFILES%\\Git\\bin\\bash.exe`",
    `"guid`": `"{$new_guid}`",
    `"hidden`": false,
    `"icon`": `"%PROGRAMFILES%\\Git\\mingw64\\share\\git\\git-for-windows.ico`",
    `"name`": `"Git Bash`",
    `"startingDirectory`": `"%USERPROFILE%`"
}"
echo $git_bash_terminal_setting > ../git_settings.json

# Windows Terminal powershell OSC9;9 cwd (https://github.com/microsoft/terminal/issues/8166)
cat Microsoft.PowerShell_profile.ps1 >> $PROMPT

# Install posh-git module for git auto-completion
Install-Module posh-git -Scope CurrentUser -Force


# Git for windows settings
echo "# generated by Git for Windows
test -f ~/.profile && . ~/.profile
test -f ~/.bashrc && . ~/.bashrc" >> $env:HOME\.bash_profile
echo "function backslash() {
  echo `$1 | sed 's#/#\\#g'
}

function fix-symlinks() {
    if [ ! `$(git rev-parse --is-inside-work-tree) ]; then
      echo `"exit because not a git repository`"
      return 1
    fi
    for link in `$(find . -type l); do
      dest=`$(readlink `$link)
      if [ -d `$link ]; then
        rm `$link
        cmd //c mklink //d `$(backslash `$link) `$(backslash `$dest)
      elif [ -f `$link ]; then
        rm `$link
        cmd //c mklink `$(backslash `$link) `$(backslash `$dest)
      fi
    done
}" >> $env:HOME\.bashrc
